#include<iostream>
using namespace std;
int T;
int main() {
	ios::sync_with_stdio(0);	cin.tie(0);
	cin >> T;
	for (int t = 1; t <= T; t++) {
		long long N = 0;
		cin >> N;
		/*if (N == 1) {
			cout << "#" << t << "Bob\n";
		}*/

		bool flag = true;
		// !! while문 조건은 항상 참
		while (N > 3) {
			//cout << N << endl;
			if (flag) {
				N = (N / 2) + 1;
			}
			else {
				N = (N / 2) - 1;
			}
			flag = !flag;
		}
		if (N == 1) {
			cout << "#" << t << " Bob\n";
		}
		else {
			//cout << N << endl;
			cout << "#" << t << " Alice\n";
		}
	}

	return 0;
}

/*
문제점1
- 처음 첩근할 땐, 짝수와 홀수와의 관계를 이용하는 문제라고 생각함
- 그래서 (2,3), (4,5) ,.. 를 묶어 등차수열을 만들면 an = 4n+1식이 나옴 => 하지만 규칙을 못찾음

-> 문제를 검색함
- 수열 문제가 아닌 거꾸로 생각하는 문제였음
- 최선을 다해야 함 => 다음 사람이 불리하게 숫자를 놓아야 함
ex) N이 100이라면 다음사람이 100보다 큰 수를 내게 유도 => 현재 51이라면 다음사람은 102부터 시작이기 때문에 이김
	이렇게 하다보면 100 -> 51 -> (51이 안나오게 작은수) 24 -> (24안나오게 큰수) 13 -> ... -> 3(Alice)
	큰수, 작은수 번갈아서 하는건 짝수, 홀수냐에 따라 범위가 달라지기 때문

문제점2
- 처음 조건에 2,3일때는 무조건 Alice라고 했더니 3개정도 틀렸다.왜일까
- N이 1일때 조건 어차피 Bob이니까 그냥 해줬는데 저걸 지웠더니 pass가 됐다..
	=> 그러니까 불필요한 코드가 있는지 없는지 계속해서 확인하자. 저것도 어차피 while에 안들어가서 불필요한 코드였음
*/